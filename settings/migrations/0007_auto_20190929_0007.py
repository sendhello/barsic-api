# Generated by Django 2.1.12 on 2019-09-28 21:07

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('settings', '0006_auto_20190928_2206'),
    ]

    operations = [
        migrations.CreateModel(
            name='SettingGoogleSheets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credentials_file', models.FileField(upload_to='data/', verbose_name='JSON-token')),
                ('writers', models.TextField(blank=True, help_text='Список email-адресов через запятую', null=True, verbose_name='Список редакторов')),
                ('readers', models.TextField(blank=True, help_text='Список email-адресов через запятую', null=True, verbose_name='Список зрителей')),
                ('is_read_all', models.BooleanField(default=False, verbose_name='Разрешить просмотр по ссылке для всех')),
            ],
            options={
                'verbose_name': 'настройки GoogleSheets',
            },
        ),
        migrations.CreateModel(
            name='SettingTelegram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='Telegram-токен', max_length=255, null=True, verbose_name='Telegram-токен')),
                ('chanel_id', models.IntegerField(help_text='ID пользователя или группы', null=True, verbose_name='ID канала')),
                ('is_proxy', models.BooleanField(default=False, verbose_name='Использовать прокси')),
                ('proxy_type', models.CharField(choices=[('PROXY_TYPE_SOCKS5', 'SOCKS5'), ('PROXY_TYPE_SOCKS4', 'SOCKS4'), ('PROXY_TYPE_HTTP', 'HTTP')], default='PROXY_TYPE_SOCKS5', max_length=30, verbose_name='Тип прокси')),
                ('proxy_host', models.SlugField(blank=True, help_text='Адрес сервера без "http://" и "/"', null=True, verbose_name='Адрес прокси-сервера')),
                ('proxy_port', models.PositiveIntegerField(blank=True, default=80, help_text='ID пользователя или группы', null=True, verbose_name='Порт прокси сервера')),
                ('is_auth', models.BooleanField(default=False, verbose_name='Нужна авторизация')),
                ('username', models.CharField(blank=True, help_text='Логин прокси сервера', max_length=255, null=True, verbose_name='Логин прокси')),
                ('password', models.CharField(blank=True, help_text='Пароль прокси сервера', max_length=255, null=True, verbose_name='Пароль прокси')),
            ],
            options={
                'verbose_name': 'настройки Telegram',
            },
        ),
        migrations.CreateModel(
            name='SettingYandex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='Yandex-токен', max_length=255, null=True, verbose_name='Yandex-токен')),
                ('path', models.CharField(default='/', help_text='Путь к папке в Yandex-Диске', max_length=255, verbose_name='Путь к папке')),
            ],
            options={
                'verbose_name': 'настройки Yandex.Disk',
            },
        ),
        migrations.AlterModelOptions(
            name='settingbase',
            options={'verbose_name': 'сопоставление баз данных'},
        ),
        migrations.AlterModelOptions(
            name='settingbitrix',
            options={'verbose_name': 'настройки Bitrix'},
        ),
    ]
